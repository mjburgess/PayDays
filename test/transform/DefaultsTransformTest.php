<?php
namespace mjburgess\paydays\transform;

use mjburgess\paydays\PayDates;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-05-29 at 13:51:12.
 */
class DefaultsTransformTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var DefaultsTransform
     */
    protected $object;

    /**
     * @covers mjburgess\paydays\transform\DefaultsTransform::getBonusDate
     */
    public function testGetBonusDate()
    {
        $this->object = new DefaultsTransform(10, 20);
        $this->assertEquals(mktime(0,0,0,1,10,2013), $this->object->getBonusDate(mktime(0,0,0,1,2,2013)));

        $this->object = new DefaultsTransform(DefaultsTransform::LAST_DAY, DefaultsTransform::LAST_DAY);
        $this->assertEquals(date('t'), date('t', $this->object->getBonusDate(time())));
    }

    /**
     * @covers mjburgess\paydays\transform\DefaultsTransform::getPayDate
     */
    public function testGetPayDate()
    {
        $this->object = new DefaultsTransform(10, 20);
        $this->assertEquals(mktime(0,0,0,1,20,2013), $this->object->getPayDate(mktime(0,0,0,1,2,2013)));

        $this->object = new DefaultsTransform(DefaultsTransform::LAST_DAY, DefaultsTransform::LAST_DAY);
        $this->assertEquals(date('t'), date('d', $this->object->getPayDate(time())));
    }

    /**
     * @covers mjburgess\paydays\transform\DefaultsTransform::__invoke
     */
    public function test__invoke()
    {
        $this->object = new DefaultsTransform(10, 20);

        $pd = new PayDates(5, 2013);
        $pd->setPayDate(15);
        $pd->setBonusDate(25);

        $pd = $this->object->__invoke($pd);
        $this->assertEquals(mktime(0,0,0,5,10,2013), $pd->getBonusDate());
        $this->assertEquals(mktime(0,0,0,5,20,2013), $pd->getPayDate());
    }
}
